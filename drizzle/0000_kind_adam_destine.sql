CREATE TABLE IF NOT EXISTS "elevenlabs-hack_journal_entry" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "elevenlabs-hack_journal_entry_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"user_id" varchar(255) NOT NULL,
	"raw_entry" text NOT NULL,
	"summarized_entry" text NOT NULL,
	"mood_score" numeric(5, 2) NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "elevenlabs-hack_user" (
	"id" varchar(255) PRIMARY KEY NOT NULL,
	"email" varchar(255) NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"memory" text[] DEFAULT ARRAY[]::text[] NOT NULL,
	"memoryEnabledAt" timestamp with time zone DEFAULT now()
);
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "elevenlabs-hack_journal_entry" ADD CONSTRAINT "elevenlabs-hack_journal_entry_user_id_elevenlabs-hack_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."elevenlabs-hack_user"("id") ON DELETE cascade ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "created_at_idx" ON "elevenlabs-hack_journal_entry" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "user_id_idx" ON "elevenlabs-hack_journal_entry" USING btree ("user_id");